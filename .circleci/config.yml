version: 2.1

jobs:
  run_tests:
    docker:
      - image: python:3.12.0a4-alpine3.17
    steps:
      - checkout
      - run:
          name: Setup environment
          command: |
            apk add curl jq
            apk update
            apk add --no-cache chromium chromium-chromedriver tzdata
            wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
            wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-2.30-r0.apk
            wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-bin-2.30-r0.apk
            apk add --no-cache curl openjdk11-jre
            curl -o allure-2.13.8.tgz -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.13.8/allure-commandline-2.13.8.tgz
            tar -zxvf allure-2.13.8.tgz -C /opt/
            ln -s /opt/allure-2.13.8/bin/allure /usr/bin/allure
            rm allure-2.13.8.tgz
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements.txt
      - run:
          name: Run tests
          command: |
            STAGE=dev BROWSER=chrome pytest -sv --alluredir=allure-results --junitxml=test-results/junit.xml || true
      - restore_cache:
          keys:
            - allure-history-{{ .Branch }}-
      - run:
          name: Prepairing of Allure History
          command: |
            if [ -d "allure-report/history" ]; then
              mkdir -p allure-results/history
              cp -r allure-report/history allure-results/
            else
              echo "No history to restore"
            fi
      - run:
          name: Get CircleCI Job ID
          command: |
            curl -H "Circle-Token: ${CIRCLECI_API_TOKEN}" "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/job" > jobs.json
            JOB_ID=$(cat jobs.json | jq -r '.items[] | select(.name=="run_tests").id') # Предполагаем, что название вашего job 'run_tests'
            echo "export CIRCLE_JOB_ID=$JOB_ID" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Setup Allure env variables
          command: |
            echo "Branch=$CIRCLE_BRANCH" > allure-results/environment.properties
            echo "Commit=$CIRCLE_SHA1" >> allure-results/environment.properties
            echo "{\"name\": \"CircleCI\", \"type\": \"circleci\", \"url\": \"$CIRCLE_REPOSITORY_URL\", \"buildOrder\": $CIRCLE_BUILD_NUM, \"buildName\": \"$CIRCLE_BRANCH\", \"buildUrl\": \"$CIRCLE_BUILD_URL\", \"reportUrl\": \"https://output.circle-artifacts.com/output/job/${CIRCLE_JOB_ID}/artifacts/0/allure-report/index.html\", \"reportName\": \"Отчет о тестировании\"}" > allure-results/executor.json
      - run:
          name: Generate Allure report
          command: |
            allure generate allure-results --clean -o allure-report
      - save_cache:
          paths:
            - allure-report/history
          key: allure-history-{{ .Branch }}-{{ epoch }}

      - store_artifacts:
          path: allure-report
          destination: allure-report

      - store_test_results:
          path: test-results

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - run_tests